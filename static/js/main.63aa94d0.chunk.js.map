{"version":3,"sources":["containers/SiteHeading/siteHeading.module.scss","App.module.scss","utils/SnackbarUtils.js","utils/stockBuilder.js","utils/constants.js","redux/reducers/stock/actions.js","redux/reducers/stock/reducer.js","services/databaseService.js","services/walletService.js","utils/errors.js","services/transactionService.js","redux/reducers/exchange/actions.js","redux/reducers/exchange/reducer.js","redux/reducers/index.js","redux/middlewares/transactionRegister.js","redux/configureMiddlewares.js","redux/configureStore.js","components/Text/Text.js","components/Text/index.js","containers/SiteHeading/index.js","containers/SiteHeading/SiteHeading.js","containers/Transaction/Transaction.js","containers/Transaction/index.js","utils/colors.js","containers/CurrencyTable/CurrencyTable.js","containers/CurrencyTable/index.js","containers/MarketPage/index.js","containers/MarketPage/MarketPage.js","App.js","index.js","containers/Transaction/transaction.module.scss","containers/MarketPage/marketPage.module.scss"],"names":["module","exports","useSnackbarRef","StockBuilder","name","this","toUpperCase","change","price","cap","imageUrl","uuid","BASE_CURRENCY","USERS_PROFILES_KEY","InnerSnackbarUtilsConfigurator","setUseSnackbarRef","useSnackbar","useSnackbarRefProp","SnackbarUtilsConfigurator","snackActions","success","msg","toast","variant","warning","info","error","options","enqueueSnackbar","dismiss","key","closeSnackbar","NO_CONNECTION_SNACKBAR_KEY","AVAILABLE_STOCKS","STOCK_GET_INIT","STOCK_GET_SUCCESS","STOCK_GET_FAILURE","fetchStockData","a","cacheBuster","Math","round","Date","getTime","url","join","axios","get","data","getTickers","dispatch","type","payload","stockData","message","preventDuplicate","persist","initialState","isLoading","isError","state","action","map","item","setName","symbol","setChange","price_change_percentage_24h","setPrice","current_price","setCap","market_cap","setImageUrl","image","build","database","getItem","localforage","setItem","value","getUserById","userId","find","user","setUser","profile","usersProfiles","userIndex","findIndex","push","calculateNewFunds","wallet","currency","amount","getFunds","oldFunds","setProfileFunds","newFunds","funds","updateFunds","walletService","userFunds","addFunds","subtractFunds","NotEnoughFundsError","constructor","Error","validateIfUserHasSufficientFunds","amountToPay","exchangeCrypto","currencyToBuy","currencyToPay","amountToBuy","buyCrypto","sellCrypto","EXCHANGE_MAKE_INIT","EXCHANGE_MAKE_SUCCESS","EXCHANGE_MAKE_FAILURE","makeExchangeFail","transactionInfo","makeExchangeSuccess","makeExchange","isBuying","transactionService","createRootReducer","history","combineReducers","router","connectRouter","stock","exchange","appendTransactionToProfile","transaction","transactions","registerTransaction","newTransactionRecord","time","DateTime","now","toISO","next","createHashHistory","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","routerMiddleware","thunk","customMiddlewares","types","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","PARAGRAPH_1","PARAGRAPH_2","LABEL","states","PRIMARY","SECONDARY","MUTED","ACCENT","WARNING","SUCCESS","ERROR","BRIGHT","isSupported","shouldBeParagraph","supportedTypes","Object","values","regex","filter","supportedType","test","some","Text","text","labelControl","classes","Tag","headerSize","slice","getHeadingSize","selectTag","htmlFor","className","defaultProps","preloadedState","SiteHeading","styles","wrapper","buttonContainer","color","fields","defaultValues","errorMessages","schema","yup","shape","required","typeError","min","Transaction","stockExchangeData","useForm","mode","resolver","yupResolver","reset","control","handleSubmit","watch","setValue","getValues","formState","errors","isValid","useHistory","location","useLocation","useDispatch","currencyUrlParam","useParams","getLocationWithoutCurrency","pathname","length","checkIfUrlParamIsValid","updateRoute","updateUserBase","baseFunds","toFixed","base","updateUserCrypto","allFunds","cryptoFunds","useEffect","updatePrice","dataItem","getCurrencyPrice","updateTotal","total","onSubmit","parseFloat","heading","render","field","checked","inputProps","id","label","disabled","InputProps","startAdornment","position","labelId","capitalize","onChange","evt","helperText","onClick","locationWithoutCurrency","TransactionWrapper","useSelector","roundNumber","number","formatIntegerPart","integerNumbers","split","i","numberFormatted","reduceRight","acc","curr","concat","formatPrice","priceRounded","priceFormatted","formatChange","changeRounded","formatCap","capRounded","capFormatted","CurrencyTable","stockExchangeDataFormatted","formatStockExchangeData","component","Component","aria-label","align","scope","alt","src","style","colors","CurrencyTableWrapper","MarketPage","apiCallIntervalID","setInterval","clearInterval","table","CircularProgress","spinner","App","databaseService","ETH","USD","exact","path","to","store","createStore","ReactDOM","StrictMode","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.63aa94d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"siteHeading_wrapper__3lmlz\",\"buttonContainer\":\"siteHeading_buttonContainer__rQIQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__RCHjb\"};","import { useSnackbar } from 'notistack';\nimport React from 'react';\n\nconst InnerSnackbarUtilsConfigurator = ({ setUseSnackbarRef }) => {\n  setUseSnackbarRef(useSnackbar());\n  return null;\n};\n\nlet useSnackbarRef;\nconst setUseSnackbarRef = (useSnackbarRefProp) => {\n  useSnackbarRef = useSnackbarRefProp;\n};\n\nexport const SnackbarUtilsConfigurator = () => <InnerSnackbarUtilsConfigurator setUseSnackbarRef={setUseSnackbarRef} />;\n\nexport const snackActions = {\n  success(msg) {\n    this.toast(msg, { variant: 'success' });\n  },\n  warning(msg) {\n    this.toast(msg, { variant: 'warning' });\n  },\n  info(msg) {\n    this.toast(msg, { variant: 'info' });\n  },\n  error(msg) {\n    this.toast(msg, { variant: 'error' });\n  },\n  toast(msg, options = {}) {\n    useSnackbarRef.enqueueSnackbar(msg, options);\n  },\n  dismiss(key) {\n    useSnackbarRef.closeSnackbar(key);\n  }\n};\n","export class StockBuilder {\n  setName(name) {\n    this.name = name.toUpperCase();\n    return this;\n  }\n\n  setChange(change) {\n    this.change = change;\n    return this;\n  }\n\n  setPrice(price) {\n    this.price = price;\n    return this;\n  }\n\n  setCap(cap) {\n    this.cap = cap;\n    return this;\n  }\n\n  setImageUrl(imageUrl) {\n    this.imageUrl = imageUrl;\n    return this;\n  }\n\n  build() {\n    return ({\n      uuid: this.name,\n      name: this.name,\n      change: this.change,\n      price: this.price,\n      cap: this.cap,\n      imageUrl: this.imageUrl\n    });\n  }\n}\n","export const BASE_CURRENCY = 'USD';\nexport const DEFAULT_CRYPTO = 'BTC';\nexport const API_CALL_INTERVAL = 10000;\nexport const MAX_NOTIFICATIONS = 3;\nexport const USERS_PROFILES_KEY = 'usersProfiles';\n","import axios from 'axios';\nimport { BASE_CURRENCY } from '../../../utils/constants';\nimport { snackActions } from '../../../utils/SnackbarUtils';\n\nconst BASE_URL = 'https://api.coingecko.com/api/v3/coins/markets';\nconst NO_CONNECTION_SNACKBAR_KEY = 'noConnection';\nconst AVAILABLE_STOCKS = [\n  'bitcoin',\n  'ethereum',\n  'cardano',\n  'dogecoin',\n  'ripple',\n  'polkadot',\n  'uniswap',\n  'chainlink',\n  'litecoin',\n  'stellar'\n];\n\nexport const STOCK_GET_INIT = 'stock/get/init';\nexport const STOCK_GET_SUCCESS = 'stock/get/success';\nexport const STOCK_GET_FAILURE = 'stock/get/failure';\n\nexport const getStockInit = () => ({ type: STOCK_GET_INIT });\n\nexport const getStockFail = (error) => ({\n  type: STOCK_GET_FAILURE,\n  payload: { error }\n});\n\nexport const getStockSuccess = (stockData) => ({\n  type: STOCK_GET_SUCCESS,\n  payload: { stockData }\n});\n\nconst fetchStockData = async () => {\n  const cacheBuster = Math.round(new Date().getTime() / 1000);\n  const url = `${BASE_URL}?vs_currency=${BASE_CURRENCY}&ids=${AVAILABLE_STOCKS.join(',')}&cb=${cacheBuster}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const getTickers = () => async (dispatch) => {\n  dispatch(getStockInit());\n  try {\n    const data = await fetchStockData();\n    dispatch(getStockSuccess(data));\n    snackActions.dismiss(NO_CONNECTION_SNACKBAR_KEY);\n  } catch (error) {\n    dispatch(getStockFail(error.message));\n    snackActions.toast(error.message, {\n      variant: 'error',\n      preventDuplicate: true,\n      persist: true,\n      key: NO_CONNECTION_SNACKBAR_KEY\n    });\n  }\n};\n","import { StockBuilder } from '../../../utils/stockBuilder';\nimport { STOCK_GET_INIT, STOCK_GET_SUCCESS, STOCK_GET_FAILURE } from './actions';\n\nexport const initialState = {\n  stockData: [],\n  isLoading: true,\n  isError: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case STOCK_GET_INIT: {\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n        error: initialState.error\n      };\n    }\n    case STOCK_GET_SUCCESS: {\n      return {\n        ...state,\n        stockData: action.payload.stockData.map(\n          (item) => new StockBuilder()\n            .setName(item.symbol)\n            .setChange(item.price_change_percentage_24h)\n            .setPrice(item.current_price)\n            .setCap(item.market_cap)\n            .setImageUrl(item.image)\n            .build()\n        ),\n        isLoading: false\n      };\n    }\n    case STOCK_GET_FAILURE: {\n      return {\n        ...state,\n        stockData: initialState.stockData,\n        isLoading: false,\n        isError: true,\n        error: action.payload.error\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import localforage from 'localforage';\nimport { USERS_PROFILES_KEY } from '../utils/constants';\n\nconst database = {\n  async getItem(key) {\n    return localforage.getItem(key);\n  },\n  async setItem(key, value) {\n    return localforage.setItem(key, value);\n  }\n};\n\nexport const getUserById = async (userId) => (\n  await database.getItem(USERS_PROFILES_KEY)).find((user) => user.userId === userId);\n\nexport const setUser = async (profile) => {\n  const usersProfiles = await database.getItem(USERS_PROFILES_KEY);\n  const userIndex = usersProfiles.findIndex((user) => user.userId === profile.userId);\n\n  if (userIndex === -1) {\n    usersProfiles.push(profile);\n  } else {\n    usersProfiles[userIndex] = profile;\n  }\n\n  await database.setItem(USERS_PROFILES_KEY, usersProfiles);\n};\n\nexport default database;\n","import { getUserById, setUser } from './databaseService';\n\nconst calculateNewFunds = async ({ userId, wallet, currency, amount }) => {\n  const oldFunds = await wallet.getFunds({ userId, currency });\n  return oldFunds + amount;\n};\n\nconst setProfileFunds = ({ profile, newFunds, currency }) => {\n  profile.funds[currency] = newFunds;\n};\n\nconst updateFunds = async ({ userId, wallet, currency, amount }) => {\n  const newFunds = await calculateNewFunds({ userId, wallet, currency, amount });\n\n  const profile = await getUserById(userId);\n  setProfileFunds({ profile, newFunds, currency });\n\n  await setUser(profile);\n};\n\nconst walletService = {\n  async getFunds({ userId, currency }) {\n    const userFunds = (await getUserById(userId)).funds;\n    return currency ? userFunds[currency] ?? 0 : userFunds;\n  },\n\n  async addFunds({ userId, currency, amount }) {\n    await updateFunds({ userId, wallet: walletService, currency, amount });\n  },\n\n  async subtractFunds({ userId, currency, amount }) {\n    await updateFunds({ userId, wallet: walletService, currency, amount: -amount });\n  }\n};\n\nexport default walletService;\n","export class NotEnoughFundsError extends Error {\n  constructor() {\n    super('User do not have enough funds');\n    this.name = this.constructor.name;\n  }\n}\n","import walletService from './walletService';\nimport { BASE_CURRENCY } from '../utils/constants';\nimport { NotEnoughFundsError } from '../utils/errors';\n\nexport const validateIfUserHasSufficientFunds = async ({ userId, wallet, currency, amountToPay }) => {\n  const availableFunds = await wallet.getFunds({ userId, currency });\n\n  if (availableFunds < amountToPay) {\n    throw new NotEnoughFundsError();\n  }\n};\n\nexport const exchangeCrypto = async ({ userId, wallet, currencyToBuy, currencyToPay, amountToBuy, amountToPay }) => {\n  await validateIfUserHasSufficientFunds({ userId, wallet, currency: currencyToPay, amountToPay });\n\n  await wallet.addFunds({ userId, currency: currencyToBuy, amount: amountToBuy });\n  await wallet.subtractFunds({ userId, currency: currencyToPay, amount: amountToPay });\n};\n\nexport default (wallet = walletService) => ({\n  async buyCrypto({ userId, currency, amount, price }) {\n    await exchangeCrypto({\n      userId,\n      wallet,\n      currencyToBuy: currency,\n      currencyToPay: BASE_CURRENCY,\n      amountToBuy: amount,\n      amountToPay: amount * price\n    });\n  },\n\n  async sellCrypto({ userId, currency, amount, price }) {\n    await exchangeCrypto({\n      userId,\n      wallet,\n      currencyToBuy: BASE_CURRENCY,\n      currencyToPay: currency,\n      amountToBuy: amount * price,\n      amountToPay: amount\n    });\n  }\n});\n","import transactionService from '../../../services/transactionService';\nimport { snackActions } from '../../../utils/SnackbarUtils';\n\nconst EXCHANGE_SUCCESS_MESSAGE = 'Exchange successful';\n\nexport const EXCHANGE_MAKE_INIT = 'exchange/make/init';\nexport const EXCHANGE_MAKE_SUCCESS = 'exchange/make/success';\nexport const EXCHANGE_MAKE_FAILURE = 'exchange/make/failure';\n\nexport const makeExchangeInit = () => ({ type: EXCHANGE_MAKE_INIT });\n\nexport const makeExchangeFail = (transactionInfo, error) => ({\n  type: EXCHANGE_MAKE_FAILURE,\n  payload: { transactionInfo, error }\n});\n\nexport const makeExchangeSuccess = (transactionInfo) => ({\n  type: EXCHANGE_MAKE_SUCCESS,\n  payload: { transactionInfo }\n});\n\nexport const makeExchange = (transactionInfo) => async (dispatch) => {\n  dispatch(makeExchangeInit());\n  try {\n    if (transactionInfo.isBuying) {\n      await transactionService().buyCrypto(transactionInfo);\n    } else {\n      await transactionService().sellCrypto(transactionInfo);\n    }\n    dispatch(makeExchangeSuccess(transactionInfo));\n    snackActions.success(EXCHANGE_SUCCESS_MESSAGE);\n  } catch (error) {\n    dispatch(makeExchangeFail(transactionInfo, error.message));\n    snackActions.error(error.message);\n  }\n};\n","import { EXCHANGE_MAKE_INIT, EXCHANGE_MAKE_SUCCESS, EXCHANGE_MAKE_FAILURE } from './actions';\n\nexport const initialState = {\n  isLoading: true,\n  isError: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case EXCHANGE_MAKE_INIT: {\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n        error: initialState.error\n      };\n    }\n    case EXCHANGE_MAKE_SUCCESS: {\n      return {\n        ...state,\n        isLoading: false\n      };\n    }\n    case EXCHANGE_MAKE_FAILURE: {\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n        error: action.payload.error\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport stock from './stock/reducer';\nimport exchange from './exchange/reducer';\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  stock,\n  exchange\n});\n\nexport default createRootReducer;\n","import { DateTime } from 'luxon';\nimport { getUserById, setUser } from '../../services/databaseService';\n\nconst appendTransactionToProfile = (profile, transaction) => {\n  profile.transactions = [...profile.transactions, transaction];\n};\n\nconst registerTransaction = async (transactionInfo, error) => {\n  const newTransactionRecord = { time: DateTime.now().toISO(), transactionInfo, error: error?.message ?? error };\n\n  const profile = await getUserById(transactionInfo.userId);\n  appendTransactionToProfile(profile, newTransactionRecord);\n\n  await setUser(profile);\n};\n\nexport default registerTransaction;\n","import registerTransaction from './middlewares/transactionRegister';\nimport { EXCHANGE_MAKE_SUCCESS, EXCHANGE_MAKE_FAILURE } from './reducers/exchange/actions';\n\nconst exchangeMiddleware = () => (next) => (action) => {\n  switch (action.type) {\n    case EXCHANGE_MAKE_SUCCESS:\n      registerTransaction(action.payload.transactionInfo);\n      break;\n    case EXCHANGE_MAKE_FAILURE:\n      registerTransaction(action.payload.transactionInfo, action.payload.error);\n      break;\n    default:\n      break;\n  }\n\n  next(action);\n};\n\nexport default [exchangeMiddleware];\n","import { createHashHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './reducers';\nimport customMiddlewares from './configureMiddlewares';\n\nexport const history = createHashHistory();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(\n  applyMiddleware(\n    routerMiddleware(history),\n    thunk,\n    ...customMiddlewares\n  )\n);\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    enhancer\n  );\n\n  return store;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './text.scss';\n\nconst types = {\n  HEADING_1: 'heading-1',\n  HEADING_2: 'heading-2',\n  HEADING_3: 'heading-3',\n  HEADING_4: 'heading-4',\n  HEADING_5: 'heading-5',\n  HEADING_6: 'heading-6',\n  PARAGRAPH_1: 'paragraph-1',\n  PARAGRAPH_2: 'paragraph-2',\n  LABEL: 'label'\n};\n\nconst states = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  MUTED: 'muted',\n  ACCENT: 'accent',\n  WARNING: 'warning',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  BRIGHT: 'bright'\n};\n\nexport const isSupported = (type, shouldBeParagraph) => {\n  const supportedTypes = Object.values(types);\n  const regex = shouldBeParagraph ? /paragraph-\\d+/ : /heading-\\d+/;\n  const filteredTypes = supportedTypes.filter((supportedType) => (regex).test(supportedType));\n  return filteredTypes.some((supportedType) => supportedType === type);\n};\n\nexport const getHeadingSize = (type) => type.slice(-1);\n\nexport const selectTag = (type) => {\n  if (isSupported(type, true)) {\n    return 'p';\n  }\n\n  if (isSupported(type, false)) {\n    const headerSize = getHeadingSize(type);\n    return `h${headerSize}`;\n  }\n\n  return type;\n};\n\nconst Text = ({ text, type, state, labelControl }) => {\n  const classes = `text ${types[type]} ${states[state]}`;\n  const Tag = selectTag(types[type]);\n\n  return (\n    <Tag {...(Tag === 'label' ? { htmlFor: labelControl } : {})} className={classes}>\n      {text}\n    </Tag>\n  );\n};\n\nText.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(Object.keys(types)).isRequired,\n  state: PropTypes.oneOf(Object.keys(states)),\n  labelControl: PropTypes.string\n};\n\nText.defaultProps = { state: 'PRIMARY', labelControl: '' };\n\nexport default Text;\n","import Text from './Text';\n\nexport default Text;\n","import SiteHeading from './SiteHeading';\n\nexport default SiteHeading;\n","import React from 'react';\nimport * as Component from '@material-ui/core';\nimport Text from '../../components/Text';\nimport styles from './siteHeading.module.scss';\n\nconst SiteHeading = () => (\n  <div className={styles.wrapper}>\n    <Text text=\"Cryptocurrency stock exchange\" type=\"HEADING_3\" state=\"ACCENT\" />\n    <div className={styles.buttonContainer}>\n      <Component.Button variant=\"outlined\" color=\"primary\">\n        Log in\n      </Component.Button>\n      <Component.Button variant=\"contained\" color=\"primary\">\n        Register\n      </Component.Button>\n    </div>\n  </div>\n);\n\nexport default SiteHeading;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm, Controller } from 'react-hook-form';\nimport * as Component from '@material-ui/core';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport capitalize from 'capitalize';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport styles from './transaction.module.scss';\nimport Text from '../../components/Text';\nimport { makeExchange } from '../../redux/reducers/exchange/actions';\nimport { BASE_CURRENCY } from '../../utils/constants';\nimport { getUserById } from '../../services/databaseService';\n\nexport const fields = {\n  isBuying: 'isBuying',\n  base: 'base',\n  crypto: 'crypto',\n  currency: 'currency',\n  price: 'price',\n  amount: 'amount',\n  total: 'total'\n};\n\nconst defaultValues = {\n  [fields.isBuying]: true,\n  [fields.base]: '0.0000',\n  [fields.crypto]: '0.0000',\n  [fields.currency]: '',\n  [fields.price]: '0.0000',\n  [fields.amount]: 0,\n  [fields.total]: '0.0000'\n};\n\nexport const errorMessages = {\n  required: 'The field is required',\n  typeError: 'Value must be a number',\n  min: 'Amount must be greater than 0.0001'\n};\n\nconst schema = yup.object().shape({\n  [fields.currency]: yup\n    .string()\n    .required(errorMessages.required),\n  [fields.amount]: yup\n    .number()\n    .typeError(errorMessages.typeError)\n    .min(0.0001, errorMessages.min)\n});\n\nconst getCurrencyPrice = (\n  { stockExchangeData, currency }\n) => stockExchangeData.find((dataItem) => dataItem.name === currency).price.toFixed(4);\n\nconst calculateTotal = (\n  { price, amount }\n) => (price * amount).toFixed(4);\n\nconst Transaction = ({ stockExchangeData }) => {\n  const {\n    reset,\n    control,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    formState: { errors, isValid }\n  } = useForm({\n    mode: 'onChange',\n    defaultValues,\n    resolver: yupResolver(schema)\n  });\n\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { currency: currencyUrlParam } = useParams();\n\n  const userId = 1;\n\n  const isBuying = watch(fields.isBuying);\n\n  const isCurrencyAvailable = (name) => stockExchangeData.some((currency) => currency.name === name);\n\n  const getLocationWithoutCurrency = () => (\n    currencyUrlParam ? location.pathname.slice(0, -currencyUrlParam.length) : location.pathname\n  );\n\n  const checkIfUrlParamIsValid = () => isCurrencyAvailable(currencyUrlParam?.toUpperCase());\n\n  const updateRoute = () => {\n    history.push(`${getLocationWithoutCurrency()}${getValues(fields.currency)}`);\n  };\n\n  const validateRoute = () => {\n    if (checkIfUrlParamIsValid()) {\n      setValue(fields.currency, currencyUrlParam.toUpperCase());\n    } else if (currencyUrlParam) {\n      updateRoute();\n    }\n  };\n\n  const updateUserBase = async () => {\n    const userFunds = (await getUserById(userId)).funds;\n    const baseFunds = userFunds[BASE_CURRENCY].toFixed(4);\n    defaultValues.base = baseFunds;\n    setValue(fields.base, baseFunds);\n  };\n\n  const updateUserCrypto = async () => {\n    if (getValues(fields.currency)) {\n      const allFunds = (await getUserById(userId)).funds;\n      const cryptoFunds = allFunds[getValues(fields.currency)]?.toFixed(4) || '0.0000';\n      setValue(fields.crypto, cryptoFunds);\n    }\n  };\n\n  useEffect(() => {\n    validateRoute();\n    updateUserBase();\n    updateUserCrypto();\n  }, []);\n\n  const updatePrice = () => {\n    const currency = getValues(fields.currency);\n    if (currency) {\n      setValue(fields.price, getCurrencyPrice({ stockExchangeData, currency }));\n    } else {\n      setValue(fields.price, defaultValues.price);\n    }\n  };\n\n  const updateTotal = () => {\n    const currency = getValues(fields.currency);\n    if (currency && !errors.amount) {\n      setValue(fields.total, calculateTotal({ price: getValues(fields.price), amount: getValues(fields.amount) }));\n    } else {\n      setValue(fields.total, defaultValues.total);\n    }\n  };\n\n  useEffect(() => {\n    updatePrice();\n    updateTotal();\n  }, [stockExchangeData]);\n\n  const onReset = () => {\n    reset(defaultValues);\n\n    const locationWithoutCurrency = getLocationWithoutCurrency();\n    if (location.pathname !== locationWithoutCurrency) {\n      history.push(`${locationWithoutCurrency}`);\n    }\n  };\n\n  const onSubmit = async ({ amount, currency, isBuying, price }) => {\n    await dispatch(makeExchange({ userId, amount, currency, isBuying, price: parseFloat(price) }));\n    updateUserBase();\n    updateUserCrypto();\n  };\n\n  const onCurrencyChange = () => {\n    updateRoute();\n    updatePrice();\n    updateTotal();\n    updateUserCrypto();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={styles.wrapper}>\n      <div className={styles.heading}>\n        <Text text=\"Transaction Type:\" type=\"HEADING_5\" />\n        <Text text={isBuying ? 'Buy' : 'Sell'} type=\"HEADING_5\" state={isBuying ? 'SUCCESS' : 'ACCENT'} />\n        <Controller\n          name={fields.isBuying}\n          control={control}\n          render={({ field }) => (\n            <Component.Switch\n              color=\"primary\"\n              checked={field.value}\n              inputProps={{ 'aria-label': 'primary checkbox' }}\n              {...field}\n            />\n          )}\n        />\n      </div>\n      <div className={styles.funds}>\n        <Controller\n          name={fields.crypto}\n          control={control}\n          render={({ field }) => (\n            <Component.TextField\n              id={fields.crypto}\n              label=\"Available Crypto\"\n              variant=\"outlined\"\n              disabled\n              {...field}\n            />\n          )}\n        />\n        <Controller\n          name={fields.base}\n          control={control}\n          render={({ field }) => (\n            <Component.TextField\n              id={fields.base}\n              label={`Available ${BASE_CURRENCY}`}\n              variant=\"outlined\"\n              InputProps={{ startAdornment: <Component.InputAdornment position=\"start\">$</Component.InputAdornment> }}\n              disabled\n              {...field}\n            />\n          )}\n        />\n      </div>\n      <div className={styles.funds}>\n        <Component.FormControl variant=\"outlined\" error={!!errors.currency}>\n          <Component.InputLabel id={fields.currency}>Currency</Component.InputLabel>\n          <Controller\n            name={fields.currency}\n            control={control}\n            render={({ field }) => (\n              <Component.Select\n                labelId={fields.currency}\n                id={fields.currency}\n                label={capitalize(fields.currency)}\n                inputProps={{ 'data-testid': fields.currency }}\n                {...field}\n                onChange={(evt) => {\n                  field.onChange(evt);\n                  onCurrencyChange(evt);\n                }}\n              >\n                {stockExchangeData.map((dataItem) => (\n                  <Component.MenuItem key={dataItem.uuid} value={dataItem.name}>\n                    {dataItem.name}\n                  </Component.MenuItem>\n                ))}\n              </Component.Select>\n            )}\n          />\n          <Component.FormHelperText>\n            {errors.currency?.message}\n          </Component.FormHelperText>\n        </Component.FormControl>\n        <Controller\n          name={fields.amount}\n          control={control}\n          render={({ field }) => (\n            <Component.TextField\n              id={fields.amount}\n              type=\"number\"\n              label={capitalize(fields.amount)}\n              variant=\"outlined\"\n              error={!!errors.amount}\n              helperText={errors.amount?.message}\n              {...field}\n              onChange={(evt) => {\n                field.onChange(evt);\n                updatePrice();\n                updateTotal();\n              }}\n            />\n          )}\n        />\n      </div>\n      <div className={styles.funds}>\n        <Controller\n          name={fields.price}\n          control={control}\n          render={({ field }) => (\n            <Component.TextField\n              id={fields.price}\n              label={capitalize(fields.price)}\n              variant=\"outlined\"\n              InputProps={{ startAdornment: <Component.InputAdornment position=\"start\">$</Component.InputAdornment> }}\n              disabled\n              {...field}\n            />\n          )}\n        />\n        <Controller\n          name={fields.total}\n          control={control}\n          render={({ field }) => (\n            <Component.TextField\n              id={fields.total}\n              label={capitalize(fields.total)}\n              variant=\"outlined\"\n              InputProps={{ startAdornment: <Component.InputAdornment position=\"start\">$</Component.InputAdornment> }}\n              disabled\n              {...field}\n            />\n          )}\n        />\n      </div>\n      <div className={styles.buttonContainer}>\n        <Component.Button disabled={!isValid} type=\"submit\" variant=\"contained\" color=\"primary\">\n          Confirm\n        </Component.Button>\n        <Component.Button variant=\"outlined\" color=\"primary\" onClick={onReset}>\n          Reset\n        </Component.Button>\n      </div>\n    </form>\n  );\n};\n\nexport default Transaction;\n\nTransaction.propTypes = {\n  stockExchangeData: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    price: PropTypes.number,\n    change: PropTypes.number,\n    cap: PropTypes.number\n  })).isRequired\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Transaction from './Transaction';\n\nconst TransactionWrapper = () => {\n  const { stockData } = useSelector((state) => state.stock);\n  return <Transaction stockExchangeData={stockData} />;\n};\n\nexport default TransactionWrapper;\n","export default {\n  accent: '#0880ae',\n  warning: '#f2ac57',\n  success: '#14a38b',\n  error: '#ff7171',\n  primary: '#2c2738',\n  secondary: '#756f86',\n  muted: '#7c9cbf',\n  bright: '#fff',\n  shade: '#dbe2ea',\n  tint: '#ebf4f8'\n};\n","import React from 'react';\nimport * as Component from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport colors from '../../utils/colors';\nimport { BASE_CURRENCY } from '../../utils/constants';\n\nconst roundNumber = (number) => (Math.round(number * 100) / 100).toFixed(2);\n\nconst formatIntegerPart = (number) => {\n  const integerNumbers = number.split('.')[0].split('');\n\n  let i = 0;\n  const numberFormatted = integerNumbers.reduceRight((acc, curr) => (\n    ((++i % 3 === 0 && i !== integerNumbers.length) ? `,${curr}` : curr).concat(acc)\n  ), '');\n\n  return `${numberFormatted}.${number.split('.')[1]}`;\n};\n\nconst formatPrice = (price) => {\n  const priceRounded = roundNumber(price);\n  const priceFormatted = formatIntegerPart(priceRounded);\n\n  return `${priceFormatted} ${BASE_CURRENCY}`;\n};\n\nconst formatChange = (change) => {\n  const changeRounded = roundNumber(change);\n  return changeRounded >= 0 ? `+${changeRounded}%` : `${changeRounded}%`;\n};\n\nconst formatCap = (cap) => {\n  const capRounded = roundNumber(cap);\n  const capFormatted = formatIntegerPart(capRounded);\n\n  return !cap ? 'Unknown' : `${capFormatted}M ${BASE_CURRENCY}`;\n};\n\nconst formatStockExchangeData = (stockExchangeData) => (\n  stockExchangeData.map((dataItem) => (\n    {\n      ...dataItem,\n      price: formatPrice(dataItem.price),\n      change: formatChange(dataItem.change),\n      cap: formatCap(dataItem.cap)\n    }\n  ))\n);\n\nconst CurrencyTable = ({ stockExchangeData }) => {\n  const stockExchangeDataFormatted = formatStockExchangeData(stockExchangeData || []);\n\n  return (\n    <Component.TableContainer component={Component.Paper}>\n      <Component.Table aria-label=\"simple table\">\n        <Component.TableHead>\n          <Component.TableRow>\n            <Component.TableCell />\n            <Component.TableCell>Name</Component.TableCell>\n            <Component.TableCell align=\"right\">Current Price</Component.TableCell>\n            <Component.TableCell align=\"right\">24h Change</Component.TableCell>\n            <Component.TableCell align=\"right\">Market Cap</Component.TableCell>\n          </Component.TableRow>\n        </Component.TableHead>\n        <Component.TableBody>\n          {stockExchangeDataFormatted.map((dataItem) => (\n            <Component.TableRow key={dataItem.uuid}>\n              <Component.TableCell component=\"th\" scope=\"row\">\n                <Component.Avatar alt={dataItem.name} src={dataItem.imageUrl} />\n              </Component.TableCell>\n              <Component.TableCell component=\"th\" scope=\"row\">{dataItem.name}</Component.TableCell>\n              <Component.TableCell align=\"right\">{dataItem.price}</Component.TableCell>\n              <Component.TableCell\n                style={dataItem.change[0] === '+' ? { color: colors.success } : { color: colors.error }}\n                align=\"right\"\n              >\n                {dataItem.change}\n              </Component.TableCell>\n              <Component.TableCell align=\"right\">{dataItem.cap}</Component.TableCell>\n            </Component.TableRow>\n          ))}\n        </Component.TableBody>\n      </Component.Table>\n    </Component.TableContainer>\n  );\n};\n\nexport default CurrencyTable;\n\nCurrencyTable.propTypes = {\n  stockExchangeData: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    price: PropTypes.number,\n    change: PropTypes.number,\n    cap: PropTypes.number\n  })).isRequired\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport CurrencyTable from './CurrencyTable';\n\nconst CurrencyTableWrapper = () => {\n  const { stockData } = useSelector((state) => state.stock);\n  return <CurrencyTable stockExchangeData={stockData} />;\n};\n\nexport default CurrencyTableWrapper;\n","import MarketPage from './MarketPage';\n\nexport default MarketPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Transaction from '../Transaction';\nimport Table from '../CurrencyTable';\nimport { wrapper, table, transaction, spinner } from './marketPage.module.scss';\nimport { getTickers } from '../../redux/reducers/stock/actions';\nimport { API_CALL_INTERVAL } from '../../utils/constants';\n\nconst MarketPage = () => {\n  const dispatch = useDispatch();\n  const { stockData } = useSelector((state) => state.stock);\n\n  useEffect(() => {\n    dispatch(getTickers());\n    const apiCallIntervalID = setInterval(() => dispatch(getTickers()), API_CALL_INTERVAL);\n\n    return () => {\n      clearInterval(apiCallIntervalID);\n    };\n  }, []);\n\n  if (!stockData.length) {\n    return <CircularProgress className={spinner} />;\n  }\n\n  return (\n    <div className={wrapper}>\n      <div className={table}>\n        <Table />\n      </div>\n      <div className={transaction}>\n        <Transaction />\n      </div>\n    </div>\n  );\n};\n\nexport default MarketPage;\n","import React from 'react';\nimport {\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport databaseService from './services/databaseService';\nimport { USERS_PROFILES_KEY, DEFAULT_CRYPTO } from './utils/constants';\nimport SiteHeading from './containers/SiteHeading';\nimport MarketPage from './containers/MarketPage';\nimport { wrapper } from './App.module.scss';\n\nconst App = () => {\n  databaseService.setItem(USERS_PROFILES_KEY, [{\n    userId: 1,\n    funds: {\n      ETH: 5,\n      USD: 10\n    },\n    transactions: []\n  }]);\n\n  return (\n    <div className={wrapper}>\n      <SiteHeading />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to={`/exchange/${DEFAULT_CRYPTO}`} />\n        </Route>\n        <Route path=\"/exchange/:currency?\" component={MarketPage} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { SnackbarProvider } from 'notistack';\nimport configureStore, { history } from './redux/configureStore';\nimport { MAX_NOTIFICATIONS } from './utils/constants';\nimport { SnackbarUtilsConfigurator } from './utils/SnackbarUtils';\nimport App from './App';\nimport './index.scss';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <SnackbarProvider maxSnack={MAX_NOTIFICATIONS}>\n          <SnackbarUtilsConfigurator />\n          <App />\n        </SnackbarProvider>\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"transaction_wrapper__2LVHf\",\"heading\":\"transaction_heading__3AQgH\",\"funds\":\"transaction_funds__UbLrn\",\"buttonContainer\":\"transaction_buttonContainer__13Lbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"marketPage_wrapper__O-uTb\",\"table\":\"marketPage_table__1RKhs\",\"transaction\":\"marketPage_transaction__9ouPs\",\"spinner\":\"marketPage_spinner__2TIiD\"};"],"sourceRoot":""}