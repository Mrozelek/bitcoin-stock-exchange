{"version":3,"sources":["containers/SiteHeading/siteHeading.module.scss","App.module.scss","utils/SnackbarUtils.js","utils/stockBuilder.js","utils/constants.js","redux/reducers/stock/actions.js","redux/reducers/stock/reducer.js","services/databaseService.js","services/walletService.js","utils/errors.js","services/transactionService.js","redux/reducers/exchange/actions.js","redux/reducers/exchange/reducer.js","redux/reducers/index.js","redux/middlewares/transactionRegister.js","redux/configureMiddlewares.js","redux/configureStore.js","components/Text/Text.js","containers/CurrencyTable/index.js","components/Text/index.js","containers/SiteHeading/index.js","containers/SiteHeading/SiteHeading.js","containers/Transaction/Transaction.js","containers/Transaction/index.js","utils/colors.js","containers/CurrencyTable/CurrencyTable.js","containers/MarketPage/index.js","containers/MarketPage/MarketPage.js","App.js","index.js","containers/Transaction/transaction.module.scss","containers/MarketPage/marketPage.module.scss"],"names":["module","exports","useSnackbarRef","StockBuilder","name","this","toUpperCase","change","price","cap","imageUrl","uuid","BASE_CURRENCY","USERS_PROFILES_KEY","InnerSnackbarUtilsConfigurator","setUseSnackbarRef","useSnackbar","useSnackbarRefProp","SnackbarUtilsConfigurator","snackActions","success","msg","toast","variant","warning","info","error","options","enqueueSnackbar","dismiss","key","closeSnackbar","NO_CONNECTION_SNACKBAR_KEY","AVAILABLE_STOCKS","STOCK_GET_INIT","STOCK_GET_SUCCESS","STOCK_GET_FAILURE","fetchStockData","a","cacheBuster","Math","round","Date","getTime","url","join","axios","get","data","getTickers","dispatch","type","payload","stockData","message","preventDuplicate","persist","initialState","isLoading","isError","state","action","map","item","setName","symbol","setChange","price_change_percentage_24h","setPrice","current_price","setCap","market_cap","setImageUrl","image","build","database","getItem","localforage","setItem","value","getUserById","userId","find","user","setUser","profile","usersProfiles","userIndex","findIndex","push","calculateNewFunds","wallet","currencyName","amount","getFunds","oldFunds","setProfileFunds","newFunds","funds","updateFunds","walletService","userFunds","addFunds","subtractFunds","NotEnoughFundsError","constructor","Error","validateIfUserHasSufficientFunds","amountToPay","exchangeCrypto","currencyToBuy","currencyToPay","amountToBuy","buyCrypto","sellCrypto","EXCHANGE_MAKE_INIT","EXCHANGE_MAKE_SUCCESS","EXCHANGE_MAKE_FAILURE","makeExchangeFail","transactionInfo","makeExchangeSuccess","createRootReducer","history","combineReducers","router","connectRouter","stock","exchange","appendTransactionToProfile","transaction","transactions","registerTransaction","newTransactionRecord","time","DateTime","now","toISO","next","createHashHistory","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","routerMiddleware","thunk","customMiddlewares","types","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","PARAGRAPH_1","PARAGRAPH_2","LABEL","states","PRIMARY","SECONDARY","MUTED","ACCENT","WARNING","SUCCESS","ERROR","BRIGHT","isSupported","shouldBeParagraph","supportedTypes","Object","values","regex","filter","supportedType","test","some","Text","text","labelControl","classes","Tag","headerSize","slice","getHeadingSize","selectTag","htmlFor","className","defaultProps","canShowSpinner","preloadedState","SiteHeading","styles","wrapper","buttonContainer","color","defaultValues","isBuying","total","errorMessages","schema","yup","shape","required","positive","transform","val","Number","isNaN","undefined","Transaction","stockExchangeData","useForm","mode","resolver","yupResolver","reset","control","handleSubmit","watch","setValue","getValues","formState","errors","isValid","useDispatch","useEffect","dataItem","parseFloat","toFixed","onSubmit","transactionService","heading","render","field","checked","inputProps","form","id","labelId","label","disabled","helperText","onClick","TransactionWrapper","useSelector","roundNumber","number","formatIntegerPart","integerNumbers","split","i","numberFormatted","reduceRight","acc","curr","length","concat","formatPrice","priceRounded","priceFormatted","formatChange","changeRounded","formatCap","capRounded","capFormatted","CurrencyTable","stockExchangeDataFormatted","formatStockExchangeData","component","Component","aria-label","align","scope","alt","src","style","colors","useStyles","makeStyles","center","display","justifyContent","stockDataPrev","CurrencyTableWrapper","CircularProgress","MarketPage","intervalID","setInterval","clearInterval","table","App","databaseService","ETH","USD","store","createStore","ReactDOM","StrictMode","maxSnack","document","getElementById"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,gBAAkB,uC,oBCA3ED,EAAOC,QAAU,CAAC,QAAU,uB,wFCOxBC,E,kICRSC,EAAb,gGACUC,GAEN,OADAC,KAAKD,KAAOA,EAAKE,cACVD,OAHX,gCAMYE,GAER,OADAF,KAAKE,OAASA,EACPF,OARX,+BAWWG,GAEP,OADAH,KAAKG,MAAQA,EACNH,OAbX,6BAgBSI,GAEL,OADAJ,KAAKI,IAAMA,EACJJ,OAlBX,kCAqBcK,GAEV,OADAL,KAAKK,SAAWA,EACTL,OAvBX,8BA2BI,MAAQ,CACNM,KAAMN,KAAKD,KACXA,KAAMC,KAAKD,KACXG,OAAQF,KAAKE,OACbC,MAAOH,KAAKG,MACZC,IAAKJ,KAAKI,IACVC,SAAUL,KAAKK,cAjCrB,K,0CCAaE,EAAgB,MAGhBC,EAAqB,gBFA5BC,EAAiC,SAAC,GAEtC,OADAC,EADgE,EAAxBA,mBACtBC,eACX,MAIHD,EAAoB,SAACE,GACzBf,EAAiBe,GAGNC,EAA4B,kBAAM,cAAC,EAAD,CAAgCH,kBAAmBA,KAErFI,EAAe,CAC1BC,QAD0B,SAClBC,GACNhB,KAAKiB,MAAMD,EAAK,CAAEE,QAAS,aAE7BC,QAJ0B,SAIlBH,GACNhB,KAAKiB,MAAMD,EAAK,CAAEE,QAAS,aAE7BE,KAP0B,SAOrBJ,GACHhB,KAAKiB,MAAMD,EAAK,CAAEE,QAAS,UAE7BG,MAV0B,SAUpBL,GACJhB,KAAKiB,MAAMD,EAAK,CAAEE,QAAS,WAE7BD,MAb0B,SAapBD,GAAoB,IAAfM,EAAc,uDAAJ,GACnBzB,EAAe0B,gBAAgBP,EAAKM,IAEtCE,QAhB0B,SAgBlBC,GACN5B,EAAe6B,cAAcD,KG3B3BE,EAA6B,eAC7BC,EAAmB,CACvB,UACA,WACA,UACA,WACA,SACA,WACA,UACA,YACA,WACA,WAGWC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAoB,oBAc3BC,EAAc,uCAAG,kCAAAC,EAAA,6DACfC,EAAcC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAChDC,EAFe,UA/BN,iDA+BM,wBAEkBhC,EAFlB,gBAEuCqB,EAAiBY,KAAK,KAF7D,eAEwEN,GAFxE,SAGEO,IAAMC,IAAIH,GAHZ,uBAGbI,EAHa,EAGbA,KAHa,kBAIdA,GAJc,2CAAH,qDAOPC,EAAa,yDAAM,WAAOC,GAAP,eAAAZ,EAAA,6DAC9BY,EApBiC,CAAEC,KAAMjB,IAmBX,kBAGTG,IAHS,OAGtBW,EAHsB,OAI5BE,EAhB2C,CAC7CC,KAAMhB,EACNiB,QAAS,CAAEC,UAcgBL,KACzB7B,EAAaU,QAAQG,GALO,gDAO5BkB,GAxByBxB,EAwBH,KAAM4B,QAxBQ,CACtCH,KAAMf,EACNgB,QAAS,CAAE1B,YAuBTP,EAAaG,MAAM,KAAMgC,QAAS,CAChC/B,QAAS,QACTgC,kBAAkB,EAClBC,SAAS,EACT1B,IAAKE,IAZqB,kCAjBJ,IAACN,IAiBG,oBAAN,uDCvCb+B,EAAe,CAC1BJ,UAAW,GACXK,WAAW,EACXC,SAAS,EACTjC,MAAO,MAGM,aAAmC,IAAlCkC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC/C,OAAQA,EAAOV,MACb,KAAKjB,EACH,OAAO,2BACF0B,GADL,IAEEF,WAAW,EACXC,SAAS,EACTjC,MAAO+B,EAAa/B,QAGxB,KAAKS,EACH,OAAO,2BACFyB,GADL,IAEEP,UAAWQ,EAAOT,QAAQC,UAAUS,KAClC,SAACC,GAAD,OAAU,IAAI5D,GACX6D,QAAQD,EAAKE,QACbC,UAAUH,EAAKI,6BACfC,SAASL,EAAKM,eACdC,OAAOP,EAAKQ,YACZC,YAAYT,EAAKU,OACjBC,WAELhB,WAAW,IAGf,KAAKtB,EACH,OAAO,2BACFwB,GADL,IAEEP,UAAWI,EAAaJ,UACxBK,WAAW,EACXC,SAAS,EACTjC,MAAOmC,EAAOT,QAAQ1B,QAG1B,QACE,OAAOkC,I,kBC1CPe,EAAW,CACTC,QADS,SACD9C,GAAM,OAAD,6HACV+C,IAAYD,QAAQ9C,IADV,8CAGbgD,QAJS,SAIDhD,EAAKiD,GAAQ,OAAD,6HACjBF,IAAYC,QAAQhD,EAAKiD,IADR,+CAKfC,EAAW,uCAAG,WAAOC,GAAP,SAAA3C,EAAA,sEACnBqC,EAASC,QAAQ/D,GADE,uCACmBqE,MAAK,SAACC,GAAD,OAAUA,EAAKF,SAAWA,MADlD,2CAAH,sDAGXG,EAAO,uCAAG,WAAOC,GAAP,iBAAA/C,EAAA,sEACOqC,EAASC,QAAQ/D,GADxB,cACfyE,EADe,QAIF,KAFbC,EAAYD,EAAcE,WAAU,SAACL,GAAD,OAAUA,EAAKF,SAAWI,EAAQJ,WAG1EK,EAAcG,KAAKJ,GAEnBC,EAAcC,GAAaF,EAPR,SAUfV,EAASG,QAAQjE,EAAoByE,GAVtB,2CAAH,sDAaLX,IC1BTe,EAAiB,uCAAG,qCAAApD,EAAA,6DAAS2C,EAAT,EAASA,OAAQU,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,OAAvC,SACDF,EAAOG,SAAS,CAAEb,SAAQW,iBADzB,cAClBG,EADkB,yBAEjBA,EAAWF,GAFM,2CAAH,sDAKjBG,EAAkB,SAAC,GAAyC,IAAvCX,EAAsC,EAAtCA,QAASY,EAA6B,EAA7BA,SAAUL,EAAmB,EAAnBA,aAC5CP,EAAQa,MAAMN,GAAgBK,GAG1BE,EAAW,uCAAG,uCAAA7D,EAAA,6DAAS2C,EAAT,EAASA,OAAQU,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,OAAvC,SACKH,EAAkB,CAAET,SAAQU,SAAQC,eAAcC,WADvD,cACZI,EADY,gBAGIjB,EAAYC,GAHhB,cAGZI,EAHY,OAIlBW,EAAgB,CAAEX,UAASY,WAAUL,iBAJnB,UAMZR,EAAQC,GANI,4CAAH,sDASXe,EAAgB,CACdN,SADc,YACsB,OAAD,uHAAxBb,EAAwB,EAAxBA,OAAQW,EAAgB,EAAhBA,aAAgB,SACdZ,EAAYC,GADE,cACjCoB,EADiC,OACOH,MADP,kBAEhCN,EAAY,UAAGS,EAAUT,UAAb,QAA8B,EAAIS,GAFd,8CAKnCC,SANc,YAM8B,OAAD,qHAAhCrB,EAAgC,EAAhCA,OAAQW,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,OAAU,SACzCM,EAAY,CAAElB,SAAQU,OAAQS,EAAeR,eAAcC,WADlB,8CAI3CU,cAVc,YAUmC,OAAD,qHAAhCtB,EAAgC,EAAhCA,OAAQW,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,OAAU,SAC9CM,EAAY,CAAElB,SAAQU,OAAQS,EAAeR,eAAcC,QAASA,IADtB,+CAKzCO,I,yBCnCFI,GAAb,kDACE,aAAe,IAAD,8BACZ,cAAM,kCACDpG,KAAO,EAAKqG,YAAYrG,KAFjB,EADhB,uBAAyCsG,QCI5BC,GAAgC,uCAAG,mCAAArE,EAAA,6DAAS2C,EAAT,EAASA,OAAQU,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,aAAcgB,EAAvC,EAAuCA,YAAvC,SACjBjB,EAAOG,SAAS,CAAEb,SAAQW,iBADT,mBAGzBgB,GAHyB,sBAItC,IAAIJ,GAJkC,2CAAH,sDAQhCK,GAAc,uCAAG,uCAAAvE,EAAA,6DAAS2C,EAAT,EAASA,OAAQU,EAAjB,EAAiBA,OAAQmB,EAAzB,EAAyBA,cAAeC,EAAxC,EAAwCA,cAAeC,EAAvD,EAAuDA,YAAaJ,EAApE,EAAoEA,YAApE,SACtBD,GAAiC,CAAE1B,SAAQU,SAAQC,aAAcmB,EAAeH,gBAD1D,uBAGtBjB,EAAOW,SAAS,CAAErB,SAAQW,aAAckB,EAAejB,OAAQmB,IAHzC,uBAItBrB,EAAOY,cAAc,CAAEtB,SAAQW,aAAcmB,EAAelB,OAAQe,IAJ9C,2CAAH,sDAOZ,kBAACjB,EAAD,uDAAUS,EAAV,MAA6B,CACpCa,UADoC,YACgB,OAAD,uHAAvChC,EAAuC,EAAvCA,OAAQW,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,OAAQrF,EAAS,EAATA,MAAS,SACjDqG,GAAe,CACnB5B,SACAU,SACAmB,cAAelB,EACfmB,cAAenG,EACfoG,YAAanB,EACbe,YAAaf,EAASrF,IAP+B,8CAWnD0G,WAZoC,YAYiB,OAAD,uHAAvCjC,EAAuC,EAAvCA,OAAQW,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,OAAQrF,EAAS,EAATA,MAAS,SAClDqG,GAAe,CACnB5B,SACAU,SACAC,eACAkB,cAAelG,EACfmG,cAAenB,EACfoB,YAAanB,EAASrF,EACtBoG,YAAaf,IARyC,gDC1B/CsB,GAAqB,qBACrBC,GAAwB,wBACxBC,GAAwB,wBAIxBC,GAAmB,SAACC,EAAiB7F,GAAlB,MAA6B,CAC3DyB,KAAMkE,GACNjE,QAAS,CAAEmE,kBAAiB7F,WAGjB8F,GAAsB,SAACD,GAAD,MAAsB,CACvDpE,KAAMiE,GACNhE,QAAS,CAAEmE,qBChBA9D,GAAe,CAC1BC,WAAW,EACXC,SAAS,EACTjC,MAAO,MAGM,cAAmC,IAAlCkC,EAAiC,uDAAzBH,GAAcI,EAAW,uCAC/C,OAAQA,EAAOV,MACb,KAAKgE,GACH,OAAO,2BACFvD,GADL,IAEEF,WAAW,EACXC,SAAS,EACTjC,MAAO+B,GAAa/B,QAGxB,KAAK0F,GACH,OAAO,2BACFxD,GADL,IAEEF,WAAW,IAGf,KAAK2D,GACH,OAAO,2BACFzD,GADL,IAEEF,WAAW,EACXC,SAAS,EACTjC,MAAOmC,EAAOT,QAAQ1B,QAG1B,QACE,OAAOkC,ICtBE6D,GANW,SAACC,GAAD,OAAaC,YAAgB,CACrDC,OAAQC,YAAcH,GACtBI,QACAC,e,UCLIC,GAA6B,SAAC3C,EAAS4C,GAC3C5C,EAAQ6C,aAAR,sBAA2B7C,EAAQ6C,cAAnC,CAAiDD,KAYpCE,GATU,uCAAG,WAAOZ,EAAiB7F,GAAxB,mBAAAY,EAAA,6DACpB8F,EAAuB,CAAEC,KAAMC,YAASC,MAAMC,QAASjB,kBAAiB7F,MAAK,iBAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAO4B,eAAT,QAAoB5B,GAD7E,SAGJsD,EAAYuC,EAAgBtC,QAHxB,cAGpBI,EAHoB,OAI1B2C,GAA2B3C,EAAS+C,GAJV,SAMpBhD,EAAQC,GANY,2CAAH,wDCWV,IAfY,kBAAM,SAACoD,GAAD,OAAU,SAAC5E,GAC1C,OAAQA,EAAOV,MACb,KAAKiE,GACHe,GAAoBtE,EAAOT,QAAQmE,iBACnC,MACF,KAAKF,GACHc,GAAoBtE,EAAOT,QAAQmE,gBAAiB1D,EAAOT,QAAQ1B,OAMvE+G,EAAK5E,OCRM6D,GAAUgB,cAGjBC,IADmBC,OAAOC,sCAAwCC,KAEtEC,IAAe,WAAf,GACEC,YAAiBtB,IACjBuB,KAFF,mBAGKC,O,cCVDC,I,OAAQ,CACZC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,YAAa,cACbC,YAAa,cACbC,MAAO,UAGHC,GAAS,CACbC,QAAS,UACTC,UAAW,YACXC,MAAO,QACPC,OAAQ,SACRC,QAAS,UACTC,QAAS,UACTC,MAAO,QACPC,OAAQ,UAGGC,GAAc,SAACnH,EAAMoH,GAChC,IAAMC,EAAiBC,OAAOC,OAAOvB,IAC/BwB,EAAQJ,EAAoB,gBAAkB,cAEpD,OADsBC,EAAeI,QAAO,SAACC,GAAD,OAAoBF,EAAOG,KAAKD,MACvDE,MAAK,SAACF,GAAD,OAAmBA,IAAkB1H,MAkB3D6H,GAAO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAM9H,EAAgC,EAAhCA,KAAMS,EAA0B,EAA1BA,MAAOsH,EAAmB,EAAnBA,aAC3BC,EAAO,eAAWhC,GAAMhG,GAAjB,YAA0B0G,GAAOjG,IACxCwH,EAfiB,SAACjI,GACxB,GAAImH,GAAYnH,GAAM,GACpB,MAAO,IAGT,GAAImH,GAAYnH,GAAM,GAAQ,CAC5B,IAAMkI,EARoB,SAAClI,GAAD,OAAUA,EAAKmI,OAAO,GAQ7BC,CAAepI,GAClC,MAAM,IAAN,OAAWkI,GAGb,OAAOlI,EAKKqI,CAAUrC,GAAMhG,IAE5B,OACE,cAACiI,EAAD,2BAAkB,UAARA,EAAkB,CAAEK,QAASP,GAAiB,IAAxD,IAA6DQ,UAAWP,EAAxE,SACGF,MAYPD,GAAKW,aAAe,CAAE/H,MAAO,UAAWsH,aAAc,IAEvCF,ICxDXY,GFKmCC,GGhBxBb,GFmEAA,G,qBGnEAc,GCGK,kBAClB,sBAAKJ,UAAWK,KAAOC,QAAvB,UACE,cAAC,GAAD,CAAMf,KAAK,gCAAgC9H,KAAK,YAAYS,MAAM,WAClE,sBAAK8H,UAAWK,KAAOE,gBAAvB,UACE,cAAC,KAAD,CAAkB1K,QAAQ,WAAW2K,MAAM,UAA3C,oBAGA,cAAC,KAAD,CAAkB3K,QAAQ,YAAY2K,MAAM,UAA5C,6B,sHCDAC,GAAgB,CACpBC,UAAU,EACVxG,aAAc,GACdpF,MAAO,GACPqF,OAAQ,EACRwG,MAAO,IAGIC,GACD,wBADCA,GAEA,yBAFAA,GAGN,mCAGDC,GAASC,OAAaC,MAAM,CAChC7G,aAAc4G,OAEXE,SAASJ,IACZzG,OAAQ2G,KACEF,IACPK,SAASL,IACTM,WAAU,SAACC,GAAD,OAAUC,OAAOC,MAAMF,QAAOG,EAAYH,KACpDH,SAASJ,MAyICW,GAtIK,SAAC,GAA2B,IAAD,EAAxBC,EAAwB,EAAxBA,kBAAwB,EASzCC,aAAQ,CACVC,KAAM,WACNjB,iBACAkB,SAAUC,aAAYf,MAVtBgB,EAF2C,EAE3CA,MACAC,EAH2C,EAG3CA,QACAC,EAJ2C,EAI3CA,aACAC,EAL2C,EAK3CA,MACAC,EAN2C,EAM3CA,SACAC,EAP2C,EAO3CA,UAP2C,IAQ3CC,UAAaC,EAR8B,EAQ9BA,OAAQC,EARsB,EAQtBA,QARsB,EAeJ,CAACL,EAAM,YAAaA,EAAM,gBAAiBA,EAAM,WAAnFtB,EAfsC,KAe5BxG,EAf4B,KAedC,EAfc,KAgBvC3C,EAAW8K,cAoBjB,OAXAC,qBAAU,WAAO,IAAD,EACdN,EAAS,SAAS,UAAAT,EAAkBhI,MAAK,SAACgJ,GAAD,OAAcA,EAAS9N,OAASwF,YAAvD,eAAsEpF,QAAS,MAChG,CAACoF,EAAcsH,IAElBe,qBAAU,WACR,GAAIpI,GAAUD,IAAiBkI,EAAOjI,OAAQ,CAAC,IAAD,EACtCwG,GAAQ,UAAAa,EAAkBhI,MAAK,SAACgJ,GAAD,OAAcA,EAAS9N,OAASwF,YAAvD,eAAsEpF,OAAQoN,EAAU,UACtGD,EAAS,QAASQ,WAAW9B,EAAM+B,QAAQ,QAE5C,CAACvI,EAAQD,EAAckI,EAAOjI,OAAQqH,IAGvC,uBAAMmB,SAAUZ,GAnBD,SAACzK,GAAU,IXjCDuE,EWkCjB1B,EAA0C7C,EAA1C6C,OAAQD,EAAkC5C,EAAlC4C,aAAcwG,EAAoBpJ,EAApBoJ,SAAU5L,EAAUwC,EAAVxC,MAGxC0C,GXrCyBqE,EWqCH,CAAEtC,OAAQ,EAAGY,SAAQD,eAAcwG,WAAU5L,SXrC3C,uCAAqB,WAAO0C,GAAP,SAAAZ,EAAA,yDAC/CY,EAbqC,CAAEC,KAAMgE,KAYE,UAGzCI,EAAgB6E,SAHyB,gCAIrCkC,KAAqBrH,UAAUM,GAJM,6CAMrC+G,KAAqBpH,WAAWK,GANK,OAQ7CrE,EAASsE,GAAoBD,IAC7BpG,EAAaC,QA3BgB,uBAkBgB,kDAW7C8B,EAASoE,GAAiBC,EAAiB,KAAMjE,UACjDnC,EAAaO,MAAM,KAAM4B,SAZoB,0DAArB,2DWoDgBoI,UAAWK,KAAOC,QAA1D,UACE,sBAAKN,UAAWK,KAAOwC,QAAvB,UACE,cAAC,GAAD,CAAMtD,KAAK,oBAAoB9H,KAAK,cACpC,cAAC,GAAD,CAAM8H,KAAMmB,EAAW,MAAQ,OAAQjJ,KAAK,YAAYS,MAAOwI,EAAW,UAAY,WACtF,cAAC,KAAD,CACEhM,KAAK,WACLoN,QAASA,EACTgB,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,KAAD,aACEvC,MAAM,UACNwC,QAASD,EAAM1J,MACf4J,WAAY,CAAE,aAAc,qBACxBF,UAKZ,sBAAK/C,UAAWK,KAAO6C,KAAvB,UACE,eAAC,KAAD,CAAuBrN,QAAQ,WAAWG,QAASoM,EAAOlI,aAA1D,UACE,cAAC,KAAD,CAAsBiJ,GAAG,eAAzB,kBACA,cAAC,KAAD,CACEzO,KAAK,eACLoN,QAASA,EACTgB,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,KAAD,yBACEK,QAAQ,eACRD,GAAG,eACHE,MAAM,eACNJ,WAAY,CAAE,cAAe,iBACzBF,GALN,aAOGvB,EAAkBpJ,KAAI,SAACoK,GAAD,OACrB,cAAC,KAAD,CAAwCnJ,MAAOmJ,EAAS9N,KAAxD,SACG8N,EAAS9N,MADa8N,EAASvN,eAO1C,cAAC,KAAD,oBACGmN,EAAOlI,oBADV,aACG,EAAqBtC,aAG1B,cAAC,KAAD,CACElD,KAAK,QACLoN,QAASA,EACTgB,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,KAAD,aACEI,GAAG,QACHE,MAAM,QACNxN,QAAQ,WACRyN,UAAQ,GACJP,OAIV,cAAC,KAAD,CACErO,KAAK,SACLoN,QAASA,EACTgB,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,KAAD,aACEI,GAAG,SACH1L,KAAK,SACL4L,MAAM,SACNxN,QAAQ,WACRG,QAASoM,EAAOjI,OAChBoJ,WAAU,UAAEnB,EAAOjI,cAAT,aAAE,EAAevC,SACvBmL,OAIV,cAAC,KAAD,CACErO,KAAK,QACLoN,QAASA,EACTgB,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,KAAD,aACEI,GAAG,QACHE,MAAM,QACNxN,QAAQ,WACRyN,UAAQ,GACJP,UAKZ,sBAAK/C,UAAWK,KAAOE,gBAAvB,UACE,cAAC,KAAD,CAAkB+C,UAAWjB,EAAS5K,KAAK,SAAS5B,QAAQ,YAAY2K,MAAM,UAA9E,qBAGA,cAAC,KAAD,CAAkB3K,QAAQ,WAAW2K,MAAM,UAAUgD,QAAS,kBAAM3B,EAAMpB,KAA1E,0BCzJOgD,GALY,WAAO,IACxB9L,EAAc+L,aAAY,SAACxL,GAAD,OAAWA,EAAMkE,SAA3CzE,UACR,OAAO,cAAC,GAAD,CAAa6J,kBAAmB7J,K,oGCN1B,GAGJ,UAHI,GAIN,UCEHgM,GAAc,SAACC,GAAD,OAAa9M,KAAKC,MAAe,IAAT6M,GAAgB,KAAKlB,QAAQ,IAEnEmB,GAAoB,SAACD,GACzB,IAAME,EAAiBF,EAAOG,MAAM,KAAK,GAAGA,MAAM,IAE9CC,EAAI,EACFC,EAAkBH,EAAeI,aAAY,SAACC,EAAKC,GAAN,SAC7CJ,EAAI,IAAM,GAAKA,IAAMF,EAAeO,OAAvC,WAAqDD,GAASA,GAAME,OAAOH,KAC3E,IAEH,MAAM,GAAN,OAAUF,EAAV,YAA6BL,EAAOG,MAAM,KAAK,KAG3CQ,GAAc,SAACzP,GACnB,IAAM0P,EAAeb,GAAY7O,GAC3B2P,EAAiBZ,GAAkBW,GAEzC,MAAM,GAAN,OAAUC,EAAV,YAA4BvP,IAGxBwP,GAAe,SAAC7P,GACpB,IAAM8P,EAAgBhB,GAAY9O,GAClC,OAAO8P,GAAiB,EAAjB,WAAyBA,EAAzB,eAA+CA,EAA/C,MAGHC,GAAY,SAAC7P,GACjB,IAAM8P,EAAalB,GAAY5O,GACzB+P,EAAejB,GAAkBgB,GAEvC,OAAQ9P,EAAD,UAAsB+P,EAAtB,aAAuC5P,GAAhC,WAoDD6P,GAtCO,SAAC,GAA2B,IAC1CC,EAZwB,SAACxD,GAAD,OAC9BA,EAAkBpJ,KAAI,SAACoK,GAAD,mBAAC,eAEhBA,GAFe,IAGlB1N,MAAOyP,GAAY/B,EAAS1N,OAC5BD,OAAQ6P,GAAalC,EAAS3N,QAC9BE,IAAK6P,GAAUpC,EAASzN,UAMOkQ,CADY,EAAxBzD,mBACyD,IAEhF,OACE,cAAC,KAAD,CAA0B0D,UAAWC,KAArC,SACE,eAAC,KAAD,CAAiBC,aAAW,eAA5B,UACE,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,IACA,cAAC,KAAD,mBACA,cAAC,KAAD,CAAqBC,MAAM,QAA3B,2BACA,cAAC,KAAD,CAAqBA,MAAM,QAA3B,wBACA,cAAC,KAAD,CAAqBA,MAAM,QAA3B,6BAGJ,cAAC,KAAD,UACGL,EAA2B5M,KAAI,SAACoK,GAAD,OAC9B,eAAC,KAAD,WACE,cAAC,KAAD,CAAqB0C,UAAU,KAAKI,MAAM,MAA1C,SACE,cAAC,KAAD,CAAkBC,IAAK/C,EAAS9N,KAAM8Q,IAAKhD,EAASxN,aAEtD,cAAC,KAAD,CAAqBkQ,UAAU,KAAKI,MAAM,MAA1C,SAAiD9C,EAAS9N,OAC1D,cAAC,KAAD,CAAqB2Q,MAAM,QAA3B,SAAoC7C,EAAS1N,QAC7C,cAAC,KAAD,CACE2Q,MAA8B,MAAvBjD,EAAS3N,OAAO,GAAa,CAAE2L,MAAOkF,IAAmB,CAAElF,MAAOkF,IACzEL,MAAM,QAFR,SAIG7C,EAAS3N,SAEZ,cAAC,KAAD,CAAqBwQ,MAAM,QAA3B,SAAoC7C,EAASzN,QAZtByN,EAASvN,iBP5DxC0Q,GAAYC,cAAW,iBAAO,CAClCC,OAAQ,CACNC,QAAS,OACTC,eAAgB,cAKhBC,GAAgB,GAuBLC,GArBc,WAAO,IAAD,EACSvC,aAAY,SAACxL,GAAD,OAAWA,EAAMkE,SAA/DpE,EADyB,EACzBA,UAAWC,EADc,EACdA,QAASN,EADK,EACLA,UACtB8H,EAAUkG,KAMhB,OAJApD,qBAAU,WACRrC,IAAiB,IAChB,IAEClI,GAAakI,IACfA,IAAiB,EACV,qBAAKF,UAAWP,EAAQoG,OAAxB,SAAgC,cAACK,GAAA,EAAD,OAGrCjO,GAAWD,EACN,cAAC,GAAD,CAAewJ,kBAAmBwE,MAG3CA,GAAgBrO,EACT,cAAC,GAAD,CAAe6J,kBAAmB7J,M,SQhC5BwO,GCMI,WACjB,IAAM3O,EAAW8K,cAWjB,OATAC,qBAAU,WACR/K,EAASD,KACT,IAAM6O,EAAaC,aAAY,kBAAM7O,EAASD,OvBZjB,KuBc7B,OAAO,WACL+O,cAAcF,MAEf,IAGD,sBAAKpG,UAAWM,WAAhB,UACE,qBAAKN,UAAWuG,SAAhB,SACE,cAAC,GAAD,MAEF,qBAAKvG,UAAWzD,eAAhB,SACE,cAAC,GAAD,U,UCDOiK,GAlBH,WAUV,OATAC,EAAgBrN,QAAQjE,EAAoB,CAAC,CAC3CoE,OAAQ,EACRiB,MAAO,CACLkM,IAAK,EACLC,IAAK,IAEPnK,aAAc,MAId,sBAAKwD,UAAWM,WAAhB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,QCTAsG,I,ObQUC,YACZ9K,GAAkBC,IAClBmE,GACAlD,KaTJ6J,IAAShE,OACP,cAAC,IAAMiE,WAAP,UACE,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAiB5K,QAASA,GAA1B,SACE,eAAC,IAAD,CAAkBgL,SzBfO,EyBezB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,aAKRC,SAASC,eAAe,U,mBCvB1B5S,EAAOC,QAAU,CAAC,QAAU,6BAA6B,QAAU,6BAA6B,KAAO,0BAA0B,gBAAkB,uC,mBCAnJD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,YAAc,mC","file":"static/js/main.bff22780.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"siteHeading_wrapper__3lmlz\",\"buttonContainer\":\"siteHeading_buttonContainer__rQIQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__RCHjb\"};","import { useSnackbar } from 'notistack';\nimport React from 'react';\n\nconst InnerSnackbarUtilsConfigurator = ({ setUseSnackbarRef }) => {\n  setUseSnackbarRef(useSnackbar());\n  return null;\n};\n\nlet useSnackbarRef;\nconst setUseSnackbarRef = (useSnackbarRefProp) => {\n  useSnackbarRef = useSnackbarRefProp;\n};\n\nexport const SnackbarUtilsConfigurator = () => <InnerSnackbarUtilsConfigurator setUseSnackbarRef={setUseSnackbarRef} />;\n\nexport const snackActions = {\n  success(msg) {\n    this.toast(msg, { variant: 'success' });\n  },\n  warning(msg) {\n    this.toast(msg, { variant: 'warning' });\n  },\n  info(msg) {\n    this.toast(msg, { variant: 'info' });\n  },\n  error(msg) {\n    this.toast(msg, { variant: 'error' });\n  },\n  toast(msg, options = {}) {\n    useSnackbarRef.enqueueSnackbar(msg, options);\n  },\n  dismiss(key) {\n    useSnackbarRef.closeSnackbar(key);\n  }\n};\n","export class StockBuilder {\n  setName(name) {\n    this.name = name.toUpperCase();\n    return this;\n  }\n\n  setChange(change) {\n    this.change = change;\n    return this;\n  }\n\n  setPrice(price) {\n    this.price = price;\n    return this;\n  }\n\n  setCap(cap) {\n    this.cap = cap;\n    return this;\n  }\n\n  setImageUrl(imageUrl) {\n    this.imageUrl = imageUrl;\n    return this;\n  }\n\n  build() {\n    return ({\n      uuid: this.name,\n      name: this.name,\n      change: this.change,\n      price: this.price,\n      cap: this.cap,\n      imageUrl: this.imageUrl\n    });\n  }\n}\n","export const BASE_CURRENCY = 'USD';\nexport const API_CALL_INTERVAL = 10000;\nexport const MAX_NOTIFICATIONS = 3;\nexport const USERS_PROFILES_KEY = 'usersProfiles';\n","import axios from 'axios';\nimport { BASE_CURRENCY } from '../../../utils/constants';\nimport { snackActions } from '../../../utils/SnackbarUtils';\n\nconst BASE_URL = 'https://api.coingecko.com/api/v3/coins/markets';\nconst NO_CONNECTION_SNACKBAR_KEY = 'noConnection';\nconst AVAILABLE_STOCKS = [\n  'bitcoin',\n  'ethereum',\n  'cardano',\n  'dogecoin',\n  'ripple',\n  'polkadot',\n  'uniswap',\n  'chainlink',\n  'litecoin',\n  'stellar'\n];\n\nexport const STOCK_GET_INIT = 'stock/get/init';\nexport const STOCK_GET_SUCCESS = 'stock/get/success';\nexport const STOCK_GET_FAILURE = 'stock/get/failure';\n\nexport const getStockInit = () => ({ type: STOCK_GET_INIT });\n\nexport const getStockFail = (error) => ({\n  type: STOCK_GET_FAILURE,\n  payload: { error }\n});\n\nexport const getStockSuccess = (stockData) => ({\n  type: STOCK_GET_SUCCESS,\n  payload: { stockData }\n});\n\nconst fetchStockData = async () => {\n  const cacheBuster = Math.round(new Date().getTime() / 1000);\n  const url = `${BASE_URL}?vs_currency=${BASE_CURRENCY}&ids=${AVAILABLE_STOCKS.join(',')}&cb=${cacheBuster}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const getTickers = () => async (dispatch) => {\n  dispatch(getStockInit());\n  try {\n    const data = await fetchStockData();\n    dispatch(getStockSuccess(data));\n    snackActions.dismiss(NO_CONNECTION_SNACKBAR_KEY);\n  } catch (error) {\n    dispatch(getStockFail(error.message));\n    snackActions.toast(error.message, {\n      variant: 'error',\n      preventDuplicate: true,\n      persist: true,\n      key: NO_CONNECTION_SNACKBAR_KEY\n    });\n  }\n};\n","import { StockBuilder } from '../../../utils/stockBuilder';\nimport { STOCK_GET_INIT, STOCK_GET_SUCCESS, STOCK_GET_FAILURE } from './actions';\n\nexport const initialState = {\n  stockData: [],\n  isLoading: true,\n  isError: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case STOCK_GET_INIT: {\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n        error: initialState.error\n      };\n    }\n    case STOCK_GET_SUCCESS: {\n      return {\n        ...state,\n        stockData: action.payload.stockData.map(\n          (item) => new StockBuilder()\n            .setName(item.symbol)\n            .setChange(item.price_change_percentage_24h)\n            .setPrice(item.current_price)\n            .setCap(item.market_cap)\n            .setImageUrl(item.image)\n            .build()\n        ),\n        isLoading: false\n      };\n    }\n    case STOCK_GET_FAILURE: {\n      return {\n        ...state,\n        stockData: initialState.stockData,\n        isLoading: false,\n        isError: true,\n        error: action.payload.error\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import localforage from 'localforage';\nimport { USERS_PROFILES_KEY } from '../utils/constants';\n\nconst database = {\n  async getItem(key) {\n    return localforage.getItem(key);\n  },\n  async setItem(key, value) {\n    return localforage.setItem(key, value);\n  }\n};\n\nexport const getUserById = async (userId) => (\n  await database.getItem(USERS_PROFILES_KEY)).find((user) => user.userId === userId);\n\nexport const setUser = async (profile) => {\n  const usersProfiles = await database.getItem(USERS_PROFILES_KEY);\n  const userIndex = usersProfiles.findIndex((user) => user.userId === profile.userId);\n\n  if (userIndex === -1) {\n    usersProfiles.push(profile);\n  } else {\n    usersProfiles[userIndex] = profile;\n  }\n\n  await database.setItem(USERS_PROFILES_KEY, usersProfiles);\n};\n\nexport default database;\n","import { getUserById, setUser } from './databaseService';\n\nconst calculateNewFunds = async ({ userId, wallet, currencyName, amount }) => {\n  const oldFunds = await wallet.getFunds({ userId, currencyName });\n  return oldFunds + amount;\n};\n\nconst setProfileFunds = ({ profile, newFunds, currencyName }) => {\n  profile.funds[currencyName] = newFunds;\n};\n\nconst updateFunds = async ({ userId, wallet, currencyName, amount }) => {\n  const newFunds = await calculateNewFunds({ userId, wallet, currencyName, amount });\n\n  const profile = await getUserById(userId);\n  setProfileFunds({ profile, newFunds, currencyName });\n\n  await setUser(profile);\n};\n\nconst walletService = {\n  async getFunds({ userId, currencyName }) {\n    const userFunds = (await getUserById(userId)).funds;\n    return currencyName ? userFunds[currencyName] ?? 0 : userFunds;\n  },\n\n  async addFunds({ userId, currencyName, amount }) {\n    await updateFunds({ userId, wallet: walletService, currencyName, amount });\n  },\n\n  async subtractFunds({ userId, currencyName, amount }) {\n    await updateFunds({ userId, wallet: walletService, currencyName, amount: -amount });\n  }\n};\n\nexport default walletService;\n","export class NotEnoughFundsError extends Error {\n  constructor() {\n    super('User do not have enough funds');\n    this.name = this.constructor.name;\n  }\n}\n","import walletService from './walletService';\nimport { BASE_CURRENCY } from '../utils/constants';\nimport { NotEnoughFundsError } from '../utils/errors';\n\nexport const validateIfUserHasSufficientFunds = async ({ userId, wallet, currencyName, amountToPay }) => {\n  const availableFunds = await wallet.getFunds({ userId, currencyName });\n\n  if (availableFunds < amountToPay) {\n    throw new NotEnoughFundsError();\n  }\n};\n\nexport const exchangeCrypto = async ({ userId, wallet, currencyToBuy, currencyToPay, amountToBuy, amountToPay }) => {\n  await validateIfUserHasSufficientFunds({ userId, wallet, currencyName: currencyToPay, amountToPay });\n\n  await wallet.addFunds({ userId, currencyName: currencyToBuy, amount: amountToBuy });\n  await wallet.subtractFunds({ userId, currencyName: currencyToPay, amount: amountToPay });\n};\n\nexport default (wallet = walletService) => ({\n  async buyCrypto({ userId, currencyName, amount, price }) {\n    await exchangeCrypto({\n      userId,\n      wallet,\n      currencyToBuy: currencyName,\n      currencyToPay: BASE_CURRENCY,\n      amountToBuy: amount,\n      amountToPay: amount * price\n    });\n  },\n\n  async sellCrypto({ userId, currencyName, amount, price }) {\n    await exchangeCrypto({\n      userId,\n      wallet,\n      currencyName,\n      currencyToBuy: BASE_CURRENCY,\n      currencyToPay: currencyName,\n      amountToBuy: amount * price,\n      amountToPay: amount\n    });\n  }\n});\n","import transactionService from '../../../services/transactionService';\nimport { snackActions } from '../../../utils/SnackbarUtils';\n\nconst EXCHANGE_SUCCESS_MESSAGE = 'Exchange successful';\n\nexport const EXCHANGE_MAKE_INIT = 'exchange/make/init';\nexport const EXCHANGE_MAKE_SUCCESS = 'exchange/make/success';\nexport const EXCHANGE_MAKE_FAILURE = 'exchange/make/failure';\n\nexport const makeExchangeInit = () => ({ type: EXCHANGE_MAKE_INIT });\n\nexport const makeExchangeFail = (transactionInfo, error) => ({\n  type: EXCHANGE_MAKE_FAILURE,\n  payload: { transactionInfo, error }\n});\n\nexport const makeExchangeSuccess = (transactionInfo) => ({\n  type: EXCHANGE_MAKE_SUCCESS,\n  payload: { transactionInfo }\n});\n\nexport const makeExchange = (transactionInfo) => async (dispatch) => {\n  dispatch(makeExchangeInit());\n  try {\n    if (transactionInfo.isBuying) {\n      await transactionService().buyCrypto(transactionInfo);\n    } else {\n      await transactionService().sellCrypto(transactionInfo);\n    }\n    dispatch(makeExchangeSuccess(transactionInfo));\n    snackActions.success(EXCHANGE_SUCCESS_MESSAGE);\n  } catch (error) {\n    dispatch(makeExchangeFail(transactionInfo, error.message));\n    snackActions.error(error.message);\n  }\n};\n","import { EXCHANGE_MAKE_INIT, EXCHANGE_MAKE_SUCCESS, EXCHANGE_MAKE_FAILURE } from './actions';\n\nexport const initialState = {\n  isLoading: true,\n  isError: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case EXCHANGE_MAKE_INIT: {\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n        error: initialState.error\n      };\n    }\n    case EXCHANGE_MAKE_SUCCESS: {\n      return {\n        ...state,\n        isLoading: false\n      };\n    }\n    case EXCHANGE_MAKE_FAILURE: {\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n        error: action.payload.error\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport stock from './stock/reducer';\nimport exchange from './exchange/reducer';\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  stock,\n  exchange\n});\n\nexport default createRootReducer;\n","import { DateTime } from 'luxon';\nimport { getUserById, setUser } from '../../services/databaseService';\n\nconst appendTransactionToProfile = (profile, transaction) => {\n  profile.transactions = [...profile.transactions, transaction];\n};\n\nconst registerTransaction = async (transactionInfo, error) => {\n  const newTransactionRecord = { time: DateTime.now().toISO(), transactionInfo, error: error?.message ?? error };\n\n  const profile = await getUserById(transactionInfo.userId);\n  appendTransactionToProfile(profile, newTransactionRecord);\n\n  await setUser(profile);\n};\n\nexport default registerTransaction;\n","import registerTransaction from './middlewares/transactionRegister';\nimport { EXCHANGE_MAKE_SUCCESS, EXCHANGE_MAKE_FAILURE } from './reducers/exchange/actions';\n\nconst exchangeMiddleware = () => (next) => (action) => {\n  switch (action.type) {\n    case EXCHANGE_MAKE_SUCCESS:\n      registerTransaction(action.payload.transactionInfo);\n      break;\n    case EXCHANGE_MAKE_FAILURE:\n      registerTransaction(action.payload.transactionInfo, action.payload.error);\n      break;\n    default:\n      break;\n  }\n\n  next(action);\n};\n\nexport default [exchangeMiddleware];\n","import { createHashHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './reducers';\nimport customMiddlewares from './configureMiddlewares';\n\nexport const history = createHashHistory();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(\n  applyMiddleware(\n    routerMiddleware(history),\n    thunk,\n    ...customMiddlewares\n  )\n);\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    enhancer\n  );\n\n  return store;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './text.scss';\n\nconst types = {\n  HEADING_1: 'heading-1',\n  HEADING_2: 'heading-2',\n  HEADING_3: 'heading-3',\n  HEADING_4: 'heading-4',\n  HEADING_5: 'heading-5',\n  HEADING_6: 'heading-6',\n  PARAGRAPH_1: 'paragraph-1',\n  PARAGRAPH_2: 'paragraph-2',\n  LABEL: 'label'\n};\n\nconst states = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  MUTED: 'muted',\n  ACCENT: 'accent',\n  WARNING: 'warning',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  BRIGHT: 'bright'\n};\n\nexport const isSupported = (type, shouldBeParagraph) => {\n  const supportedTypes = Object.values(types);\n  const regex = shouldBeParagraph ? /paragraph-\\d+/ : /heading-\\d+/;\n  const filteredTypes = supportedTypes.filter((supportedType) => (regex).test(supportedType));\n  return filteredTypes.some((supportedType) => supportedType === type);\n};\n\nexport const getHeadingSize = (type) => type.slice(-1);\n\nexport const selectTag = (type) => {\n  if (isSupported(type, true)) {\n    return 'p';\n  }\n\n  if (isSupported(type, false)) {\n    const headerSize = getHeadingSize(type);\n    return `h${headerSize}`;\n  }\n\n  return type;\n};\n\nconst Text = ({ text, type, state, labelControl }) => {\n  const classes = `text ${types[type]} ${states[state]}`;\n  const Tag = selectTag(types[type]);\n\n  return (\n    <Tag {...(Tag === 'label' ? { htmlFor: labelControl } : {})} className={classes}>\n      {text}\n    </Tag>\n  );\n};\n\nText.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(Object.keys(types)).isRequired,\n  state: PropTypes.oneOf(Object.keys(states)),\n  labelControl: PropTypes.string\n};\n\nText.defaultProps = { state: 'PRIMARY', labelControl: '' };\n\nexport default Text;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CurrencyTable from './CurrencyTable';\n\nconst useStyles = makeStyles(() => ({\n  center: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nlet canShowSpinner;\nlet stockDataPrev = [];\n\nconst CurrencyTableWrapper = () => {\n  const { isLoading, isError, stockData } = useSelector((state) => state.stock);\n  const classes = useStyles();\n\n  useEffect(() => {\n    canShowSpinner = true;\n  }, []);\n\n  if (isLoading && canShowSpinner) {\n    canShowSpinner = false;\n    return <div className={classes.center}><CircularProgress /></div>;\n  }\n\n  if (isError || isLoading) {\n    return <CurrencyTable stockExchangeData={stockDataPrev} />;\n  }\n\n  stockDataPrev = stockData;\n  return <CurrencyTable stockExchangeData={stockData} />;\n};\n\nexport default CurrencyTableWrapper;\n","import Text from './Text';\n\nexport default Text;\n","import SiteHeading from './SiteHeading';\n\nexport default SiteHeading;\n","import React from 'react';\nimport * as Component from '@material-ui/core';\nimport Text from '../../components/Text';\nimport styles from './siteHeading.module.scss';\n\nconst SiteHeading = () => (\n  <div className={styles.wrapper}>\n    <Text text=\"Cryptocurrency stock exchange\" type=\"HEADING_3\" state=\"ACCENT\" />\n    <div className={styles.buttonContainer}>\n      <Component.Button variant=\"outlined\" color=\"primary\">\n        Log in\n      </Component.Button>\n      <Component.Button variant=\"contained\" color=\"primary\">\n        Register\n      </Component.Button>\n    </div>\n  </div>\n);\n\nexport default SiteHeading;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm, Controller } from 'react-hook-form';\nimport * as Component from '@material-ui/core';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport styles from './transaction.module.scss';\nimport Text from '../../components/Text';\nimport { makeExchange } from '../../redux/reducers/exchange/actions';\n\nconst defaultValues = {\n  isBuying: true,\n  currencyName: '',\n  price: '',\n  amount: 0,\n  total: ''\n};\n\nexport const errorMessages = {\n  required: 'The field is required',\n  typeError: 'Value must be a number',\n  min: 'Amount must be a positive number'\n};\n\nconst schema = yup.object().shape({\n  currencyName: yup\n    .string()\n    .required(errorMessages.required),\n  amount: yup\n    .number(errorMessages.typeError)\n    .positive(errorMessages.min)\n    .transform((val) => (Number.isNaN(val) ? undefined : val))\n    .required(errorMessages.required)\n});\n\nconst Transaction = ({ stockExchangeData }) => {\n  const {\n    reset,\n    control,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    formState: { errors, isValid }\n  } = useForm({\n    mode: 'onChange',\n    defaultValues,\n    resolver: yupResolver(schema)\n  });\n\n  const [isBuying, currencyName, amount] = [watch('isBuying'), watch('currencyName'), watch('amount')];\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const { amount, currencyName, isBuying, price } = data;\n\n    // TODO: this is temporary ID and should be replaced by real user ID\n    dispatch(makeExchange({ userId: 1, amount, currencyName, isBuying, price }));\n  };\n\n  useEffect(() => {\n    setValue('price', stockExchangeData.find((dataItem) => dataItem.name === currencyName)?.price || '');\n  }, [currencyName, stockExchangeData]);\n\n  useEffect(() => {\n    if (amount && currencyName && !errors.amount) {\n      const total = stockExchangeData.find((dataItem) => dataItem.name === currencyName)?.price * getValues('amount');\n      setValue('total', parseFloat(total.toFixed(2)));\n    }\n  }, [amount, currencyName, errors.amount, stockExchangeData]);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={styles.wrapper}>\n      <div className={styles.heading}>\n        <Text text=\"Transaction Type:\" type=\"HEADING_5\" />\n        <Text text={isBuying ? 'Buy' : 'Sell'} type=\"HEADING_5\" state={isBuying ? 'SUCCESS' : 'ACCENT'} />\n        <Controller\n          name=\"isBuying\"\n          control={control}\n          render={({ field }) => (\n            <Component.Switch\n              color=\"primary\"\n              checked={field.value}\n              inputProps={{ 'aria-label': 'primary checkbox' }}\n              {...field}\n            />\n          )}\n        />\n      </div>\n      <div className={styles.form}>\n        <Component.FormControl variant=\"outlined\" error={!!errors.currencyName}>\n          <Component.InputLabel id=\"currencyName\">Name</Component.InputLabel>\n          <Controller\n            name=\"currencyName\"\n            control={control}\n            render={({ field }) => (\n              <Component.Select\n                labelId=\"currencyName\"\n                id=\"currencyName\"\n                label=\"currencyName\"\n                inputProps={{ 'data-testid': 'currencyName' }}\n                {...field}\n              >\n                {stockExchangeData.map((dataItem) => (\n                  <Component.MenuItem key={dataItem.uuid} value={dataItem.name}>\n                    {dataItem.name}\n                  </Component.MenuItem>\n                ))}\n              </Component.Select>\n            )}\n          />\n          <Component.FormHelperText>\n            {errors.currencyName?.message}\n          </Component.FormHelperText>\n        </Component.FormControl>\n        <Controller\n          name=\"price\"\n          control={control}\n          render={({ field }) => (\n            <Component.TextField\n              id=\"price\"\n              label=\"Price\"\n              variant=\"outlined\"\n              disabled\n              {...field}\n            />\n          )}\n        />\n        <Controller\n          name=\"amount\"\n          control={control}\n          render={({ field }) => (\n            <Component.TextField\n              id=\"amount\"\n              type=\"number\"\n              label=\"Amount\"\n              variant=\"outlined\"\n              error={!!errors.amount}\n              helperText={errors.amount?.message}\n              {...field}\n            />\n          )}\n        />\n        <Controller\n          name=\"total\"\n          control={control}\n          render={({ field }) => (\n            <Component.TextField\n              id=\"total\"\n              label=\"Total\"\n              variant=\"outlined\"\n              disabled\n              {...field}\n            />\n          )}\n        />\n      </div>\n      <div className={styles.buttonContainer}>\n        <Component.Button disabled={!isValid} type=\"submit\" variant=\"contained\" color=\"primary\">\n          Confirm\n        </Component.Button>\n        <Component.Button variant=\"outlined\" color=\"primary\" onClick={() => reset(defaultValues)}>\n          Reset\n        </Component.Button>\n      </div>\n    </form>\n  );\n};\n\nexport default Transaction;\n\nTransaction.propTypes = {\n  stockExchangeData: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    price: PropTypes.number,\n    change: PropTypes.number,\n    cap: PropTypes.number\n  })).isRequired\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Transaction from './Transaction';\n\nconst TransactionWrapper = () => {\n  const { stockData } = useSelector((state) => state.stock);\n  return <Transaction stockExchangeData={stockData} />;\n};\n\nexport default TransactionWrapper;\n","export default {\n  accent: '#0880ae',\n  warning: '#f2ac57',\n  success: '#14a38b',\n  error: '#ff7171',\n  primary: '#2c2738',\n  secondary: '#756f86',\n  muted: '#7c9cbf',\n  bright: '#fff',\n  shade: '#dbe2ea',\n  tint: '#ebf4f8'\n};\n","import React from 'react';\nimport * as Component from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport colors from '../../utils/colors';\nimport { BASE_CURRENCY } from '../../utils/constants';\n\nconst roundNumber = (number) => (Math.round(number * 100) / 100).toFixed(2);\n\nconst formatIntegerPart = (number) => {\n  const integerNumbers = number.split('.')[0].split('');\n\n  let i = 0;\n  const numberFormatted = integerNumbers.reduceRight((acc, curr) => (\n    ((++i % 3 === 0 && i !== integerNumbers.length) ? `,${curr}` : curr).concat(acc)\n  ), '');\n\n  return `${numberFormatted}.${number.split('.')[1]}`;\n};\n\nconst formatPrice = (price) => {\n  const priceRounded = roundNumber(price);\n  const priceFormatted = formatIntegerPart(priceRounded);\n\n  return `${priceFormatted} ${BASE_CURRENCY}`;\n};\n\nconst formatChange = (change) => {\n  const changeRounded = roundNumber(change);\n  return changeRounded >= 0 ? `+${changeRounded}%` : `${changeRounded}%`;\n};\n\nconst formatCap = (cap) => {\n  const capRounded = roundNumber(cap);\n  const capFormatted = formatIntegerPart(capRounded);\n\n  return !cap ? 'Unknown' : `${capFormatted}M ${BASE_CURRENCY}`;\n};\n\nconst formatStockExchangeData = (stockExchangeData) => (\n  stockExchangeData.map((dataItem) => (\n    {\n      ...dataItem,\n      price: formatPrice(dataItem.price),\n      change: formatChange(dataItem.change),\n      cap: formatCap(dataItem.cap)\n    }\n  ))\n);\n\nconst CurrencyTable = ({ stockExchangeData }) => {\n  const stockExchangeDataFormatted = formatStockExchangeData(stockExchangeData || []);\n\n  return (\n    <Component.TableContainer component={Component.Paper}>\n      <Component.Table aria-label=\"simple table\">\n        <Component.TableHead>\n          <Component.TableRow>\n            <Component.TableCell />\n            <Component.TableCell>Name</Component.TableCell>\n            <Component.TableCell align=\"right\">Current Price</Component.TableCell>\n            <Component.TableCell align=\"right\">24h Change</Component.TableCell>\n            <Component.TableCell align=\"right\">Market Cap</Component.TableCell>\n          </Component.TableRow>\n        </Component.TableHead>\n        <Component.TableBody>\n          {stockExchangeDataFormatted.map((dataItem) => (\n            <Component.TableRow key={dataItem.uuid}>\n              <Component.TableCell component=\"th\" scope=\"row\">\n                <Component.Avatar alt={dataItem.name} src={dataItem.imageUrl} />\n              </Component.TableCell>\n              <Component.TableCell component=\"th\" scope=\"row\">{dataItem.name}</Component.TableCell>\n              <Component.TableCell align=\"right\">{dataItem.price}</Component.TableCell>\n              <Component.TableCell\n                style={dataItem.change[0] === '+' ? { color: colors.success } : { color: colors.error }}\n                align=\"right\"\n              >\n                {dataItem.change}\n              </Component.TableCell>\n              <Component.TableCell align=\"right\">{dataItem.cap}</Component.TableCell>\n            </Component.TableRow>\n          ))}\n        </Component.TableBody>\n      </Component.Table>\n    </Component.TableContainer>\n  );\n};\n\nexport default CurrencyTable;\n\nCurrencyTable.propTypes = {\n  stockExchangeData: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    price: PropTypes.number,\n    change: PropTypes.number,\n    cap: PropTypes.number\n  })).isRequired\n};\n","import MarketPage from './MarketPage';\n\nexport default MarketPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Transaction from '../Transaction';\nimport Table from '../CurrencyTable';\nimport { wrapper, table, transaction } from './marketPage.module.scss';\nimport { getTickers } from '../../redux/reducers/stock/actions';\nimport { API_CALL_INTERVAL } from '../../utils/constants';\n\nconst MarketPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTickers());\n    const intervalID = setInterval(() => dispatch(getTickers()), API_CALL_INTERVAL);\n\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, []);\n\n  return (\n    <div className={wrapper}>\n      <div className={table}>\n        <Table />\n      </div>\n      <div className={transaction}>\n        <Transaction />\n      </div>\n    </div>\n  );\n};\n\nexport default MarketPage;\n","import React from 'react';\nimport databaseService from './services/databaseService';\nimport { USERS_PROFILES_KEY } from './utils/constants';\nimport SiteHeading from './containers/SiteHeading';\nimport MarketPage from './containers/MarketPage';\nimport { wrapper } from './App.module.scss';\n\nconst App = () => {\n  databaseService.setItem(USERS_PROFILES_KEY, [{\n    userId: 1,\n    funds: {\n      ETH: 5,\n      USD: 10\n    },\n    transactions: []\n  }]);\n\n  return (\n    <div className={wrapper}>\n      <SiteHeading />\n      <MarketPage />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { SnackbarProvider } from 'notistack';\nimport configureStore, { history } from './redux/configureStore';\nimport { MAX_NOTIFICATIONS } from './utils/constants';\nimport { SnackbarUtilsConfigurator } from './utils/SnackbarUtils';\nimport App from './App';\nimport './index.scss';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <SnackbarProvider maxSnack={MAX_NOTIFICATIONS}>\n          <SnackbarUtilsConfigurator />\n          <App />\n        </SnackbarProvider>\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"transaction_wrapper__2LVHf\",\"heading\":\"transaction_heading__3AQgH\",\"form\":\"transaction_form__qcdEJ\",\"buttonContainer\":\"transaction_buttonContainer__13Lbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"marketPage_wrapper__O-uTb\",\"table\":\"marketPage_table__1RKhs\",\"transaction\":\"marketPage_transaction__9ouPs\"};"],"sourceRoot":""}